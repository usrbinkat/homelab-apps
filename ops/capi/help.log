Generate templates for creating workload clusters.

clusterctl ships with a list of known providers; if necessary, edit
$HOME/.cluster-api/clusterctl.yaml to add new provider or to customize existing ones.

Each provider configuration links to a repository; clusterctl uses this information
to fetch templates when creating a new cluster.

Usage:
  clusterctl generate cluster [flags]

Examples:
  # Generates a yaml file for creating workload clusters using
  # the pre-installed infrastructure and bootstrap providers.
  clusterctl generate cluster my-cluster
  
  # Generates a yaml file for creating workload clusters using
  # a specific version of the AWS infrastructure provider.
  clusterctl generate cluster my-cluster --infrastructure=aws:v0.4.1
  
  # Generates a yaml file for creating workload clusters in a custom namespace.
  clusterctl generate cluster my-cluster --target-namespace=foo
  
  # Generates a yaml file for creating workload clusters with a specific Kubernetes version.
  clusterctl generate cluster my-cluster --kubernetes-version=v1.19.1
  
  # Generates a yaml file for creating workload clusters with a
  # custom number of nodes (if supported by the provider's templates).
  clusterctl generate cluster my-cluster --control-plane-machine-count=3 --worker-machine-count=10
  
  # Generates a yaml file for creating workload clusters using a template stored in a ConfigMap.
  clusterctl generate cluster my-cluster --from-config-map MyTemplates
  
  # Generates a yaml file for creating workload clusters using a template from a specific URL.
  clusterctl generate cluster my-cluster --from https://github.com/foo-org/foo-repository/blob/main/cluster-template.yaml
  
  # Generates a yaml file for creating workload clusters using a template stored locally.
  clusterctl generate cluster my-cluster --from ~/workspace/cluster-template.yaml
  
  # Prints the list of variables required by the yaml file for creating workload cluster.
  clusterctl generate cluster my-cluster --list-variables

Flags:
      --control-plane-machine-count int    The number of control plane machines for the workload cluster. (default 1)
  -f, --flavor string                      The workload cluster template variant to be used when reading from the infrastructure provider repository. If unspecified, the default cluster template will be used.
      --from string                        The URL to read the workload cluster template from. If unspecified, the infrastructure provider repository URL will be used
      --from-config-map string             The ConfigMap to read the workload cluster template from. This can be used as alternative to read from the provider repository or from an URL
      --from-config-map-key string         The ConfigMap.Data key where the workload cluster template is hosted. If unspecified, "template" will be used
      --from-config-map-namespace string   The namespace where the ConfigMap exists. If unspecified, the current namespace will be used
  -h, --help                               help for cluster
  -i, --infrastructure string              The infrastructure provider to read the workload cluster template from. If unspecified, the default infrastructure provider will be used.
      --kubeconfig string                  Path to a kubeconfig file to use for the management cluster. If empty, default discovery rules apply.
      --kubeconfig-context string          Context to be used within the kubeconfig file. If empty, current context will be used.
      --kubernetes-version string          The Kubernetes version to use for the workload cluster. If unspecified, the value from OS environment variables or the .cluster-api/clusterctl.yaml config file will be used.
      --list-variables                     Returns the list of variables expected by the template instead of the template yaml
  -n, --target-namespace string            The namespace to use for the workload cluster. If unspecified, the current namespace will be used.
      --worker-machine-count int           The number of worker machines for the workload cluster.

Global Flags:
      --config $HOME/.cluster-api/clusterctl.yaml   Path to clusterctl configuration (default is $HOME/.cluster-api/clusterctl.yaml) or to a remote location (i.e. https://example.com/clusterctl.yaml)
  -v, --v int                                       Set the log level verbosity. This overrides the CLUSTERCTL_LOG_LEVEL environment variable.
