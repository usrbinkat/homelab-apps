apiVersion: kubevirt.io/v1
kind: VirtualMachine
metadata:
  name: ubuntu
  namespace: default
  labels:
    os: ubuntu
    app: kubevirt
spec:
  dataVolumeTemplates:
  - metadata:
      name: ubuntu-volume-vda-root
      namespace: default
    spec:
      pvc:
        accessModes:
        - ReadWriteOnce
        resources:
          limits:
            storage: 128G
          requests:
            storage: 128G
        storageClassName: microk8s-hostpath
      source:
        registry:
          url: docker://docker.io/containercraft/ubuntu:22.04
  running: true
  template:
    spec:
      accessCredentials:
      - sshPublicKey:
          propagationMethod:
            qemuGuestAgent:
              users:
              - kc2user
          source:
            secret:
              secretName: kargo-sshpubkey-kc2user
      domain:
        clock:
          timer: {}
          utc: {}
        cpu:
          cores: 1
          model: host-passthrough
          sockets: 2
          threads: 16
        devices:
          autoattachGraphicsDevice: true
          autoattachPodInterface: false
          autoattachSerialConsole: true
          disks:
          - bootOrder: 1
            disk:
              bus: virtio
            name: ubuntu-disk-vda-root
          - disk:
              bus: virtio
            name: cloudinitdisk
          hostDevices:
          - name: vga
            deviceName: gpu.nvidia.com/P2200quadro
          - name: audio
            deviceName: audio.nvidia.com/P2200quadro
          interfaces:
          - bridge: {}
            model: virtio
            name: enp1s0
          networkInterfaceMultiqueue: false
          rng: {}
#       machine:
#         type: q35
        resources:
          limits:
            memory: 32G
          requests:
            devices.kubevirt.io/kvm: "1"
            memory: 32G
      networks:
      - name: enp1s0
        multus:
          networkName: nadbr0
      terminationGracePeriodSeconds: 0
      volumes:
      - name: ubuntu-disk-vda-root
        dataVolume:
          name: ubuntu-volume-vda-root
      - name: cloudinitdisk
        cloudInitNoCloud:
          networkData: |
            version: 2
            ethernets:
              enp1s0:
                dhcp4: true
                dhcp6: true
                dhcp-identifier: mac
          userData: |
            #cloud-config
            hostname: ubuntu
            ssh_pwauth: true
            disable_root: true
            chpasswd:
              list: |
                kc2user:kc2user
              expire: False
            users:
              - name: kc2user
                shell: /bin/bash
                lock_passwd: false
                sudo: ['ALL=(ALL) NOPASSWD:ALL']
                groups: sudo,libvirt,xrdp,docker,ssl-cert
            growpart:
              mode: auto
              devices: ['/']
              ignore_growroot_disabled: true
            package_upgrade: true
            packages:
              - "vim"
              - "neofetch"
              - "docker.io"
              - "screenfetch"
              - "ubuntu-desktop"
              - "gnome-tweaks"
              - "firefox"
              - "xrdp"
            runcmd:
              - "apt-get remove apport apport-gtk python3-apport python3-problem-report shim-signed apport-symptoms python3-systemd ansible -y --allow-remove-essential"
              - "apt-get autoremove -y"
              - "snap install helm kubectl --classic"
              - "mkdir -p /home/kc2user/.ssh"
              - "chown -R kc2user:kc2user /home/kc2user/.ssh"
              - "mkdir -p /home/kc2user/.kube"
              - "chown -R kc2user:kc2user /home/kc2user/.kube"
              - "neofetch"
              - "echo H4sIAAAAAAACA7WRwU7DMAyG73mKaHe6dRrTyKsghELibWYhjhy3gBDvTkIXtRJC4oJP8R/ntz/HUTziyeiPTxVBXokv2agb7SZZ6RKYxl0XrRi9Eh5gNYvWe4acje7vtl2/P3S3h65fb3f6X6L13c99I0UosofsGJMgxTJkHTDaFzA6vPkn3pRU3hNcbxLTM7gC4+FohyAqC7E9wWMiCkv2upLfrdvrUsE4AhcFWRXzIwb4i42HEV2trFQg5810av5VacL0LwucGhNSRPedM5E0g2TlbPS6ZQVrOe781mO+/OC5rqfs9v5BuTBkqWxxCEF9AXZkJoMrAgAA | base64 -d | gzip -d | lxd init --preseed"
